// Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.digitalasset.canton.participant.protocol.v0;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/wrappers.proto";
import "com/digitalasset/canton/protocol/v0/synchronization.proto";

// LedgerSyncEvent is a canton type alias for the daml-on-x com.daml.ledger.participant.state.v2.Update
message LedgerSyncEvent {
    oneof value {
        ConfigurationChanged configuration_changed = 1;
        ConfigurationChangeRejected configuration_change_rejected = 2;
        PartyAddedToParticipant party_added_to_participant = 3;
        PublicPackageUpload public_package_upload = 4;
        TransactionAccepted transaction_accepted = 5;
        CommandRejected command_rejected = 6;
        PartyAllocationRejected party_allocation_rejected = 7;
        PublicPackageUploadRejected public_package_upload_rejected = 8;
    }
}

message ConfigurationChanged {
    string submission_id = 1;
    Configuration configuration = 2;
    string participant_id = 3;
    google.protobuf.Timestamp record_time = 4;
}

message Configuration {
    int64 generation = 1;
    TimeModel time_model = 2;
    google.protobuf.Duration max_deduplication_time = 3;
}

message TimeModel {
    google.protobuf.Duration avg_transaction_latency = 1;
    google.protobuf.Duration min_skew = 2;
    google.protobuf.Duration max_skew = 3;
}

message ConfigurationChangeRejected {
    string submission_id = 1;
    string reason = 2;
    string participant_id = 3;
    google.protobuf.Timestamp recordTime = 4;
    Configuration proposed_configuration = 5;
}

message PartyAddedToParticipant {
    string party = 1;
    string display_name = 2;
    string participant_id = 3;
    google.protobuf.Timestamp record_time = 4;
    string submission_id = 5;
}

message PartyAllocationRejected {
    string submission_id = 1;
    string participant_id = 2;
    google.protobuf.Timestamp record_time = 3;
    string rejection_reason = 4;
}

message PublicPackageUpload {
    repeated bytes archives = 1;
    google.protobuf.StringValue source_description = 2;
    google.protobuf.Timestamp record_time = 3;
    string submission_id = 4;
}

message PublicPackageUploadRejected {
    string submission_id = 1;
    google.protobuf.Timestamp record_time = 2;
    string rejection_reason = 3;
}

message TransactionAccepted {
    CompletionInfo completion_info = 1;
    TransactionMeta transaction_meta = 2;
    bytes transaction = 3;
    string transaction_id = 4;
    google.protobuf.Timestamp record_time = 5;
    repeated DivulgedContract divulged_contracts = 6;
    BlindingInfo blinding_info = 7; // optional
}

message CompletionInfo {
    repeated string act_as = 1;
    string application_id = 2;
    string command_id = 3;
    com.digitalasset.canton.protocol.v0.DeduplicationPeriod optDeduplicationPeriod = 4;
    string submission_id = 5;
}

message TransactionMeta {
    google.protobuf.Timestamp ledger_time = 1;
    google.protobuf.StringValue workflow_id = 2;
    google.protobuf.Timestamp submission_time = 3;
    bytes submission_seed = 4;
    repeated string used_packages = 5;
    repeated NodeSeed node_seeds = 6;
    ByKeyNodes by_key_nodes = 7; // optional

    message ByKeyNodes {
        repeated int32 by_key_node = 1;
    }
}

message NodeSeed {
    int32 node_index = 1;
    bytes node_seed = 2;
}

message DivulgedContract {
    string contract_id = 1;
    bytes contract_inst = 2;
}

message BlindingInfo {
    map<int32, Parties> disclosure = 1;
    map<string, Parties> divulgence = 2;
}

message Parties {
    repeated string parties = 1;
}

message CommandRejected {
    CompletionInfo completion_info = 1;
    google.protobuf.Timestamp record_time = 2;
    GrpcRejectionReasonTemplate rejection_reason = 3;
    // Is always a `com.daml.ledger.participant.state.v2.FinalReason`
    message GrpcRejectionReasonTemplate {
        bytes status = 1;
    }
}

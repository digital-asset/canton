{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "topologyName": {
      "type": "string",
      "defaultValue": "canton",
      "metadata": {
        "description": "Name of the network where multiple nodes may be deployed. Used for naming shared resources."
      }
    },
    "nodeName": {
      "type": "string",
      "metadata": {
        "description": "Name of the canton node to deploy. Used for resources specific to the individual node and not topology."
      }
    },
    "deployInfrastructure": {
      "type": "bool",
      "defaultValue": true
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]"
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "[concat(parameters('topologyName'), '-network')]"
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.1.0.0/24",
      "metadata": {
        "description": "Address space for the whole virtual network (including all subnets)"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "[concat(parameters('topologyName'), '-subnet')]"
    },
    "subnetAddressPrefix": {
      "type": "string",
      "defaultValue": "[parameters('addressPrefix')]"
    },
    "dbServerName": {
      "type": "string",
      "defaultValue": "[concat(parameters('topologyName'),'-db')]"
    },
    "dbPostgresVersion": {
      "type": "string",
      "defaultValue": "11"
    },
    "dbUser": {
      "type": "string",
      "defaultValue": "canton"
    },
    "dbPassword": {
      "type": "securestring"
    },
    "dbSkuName": {
      "type": "string",
      "defaultValue": "GP_Gen5_4"
    },
    "dbSkuFamily": {
      "type": "string",
      "defaultValue": "Gen5"
    },
    "dbSkuTier": {
      "type": "string",
      "defaultValue": "GeneralPurpose"
    },
    "dbSkuCapacity": {
      "type": "int",
      "defaultValue": 4
    },
    "dbSkuSizeMB": {
      "type": "int",
      "defaultValue": 102400
    },
    "dbDatabaseName": {
      "type": "string",
      "defaultValue": "[parameters('nodeName')]",
      "metadata": {
        "desription": "what to call the database used by canton"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "[concat(parameters('topologyName'), '-vault')]"
    },
    "networkSecurityGroupName": {
      "type": "string",
      "defaultValue": "[concat(parameters('topologyName'), '-nsg')]"
    },
    "sourceAddressPrefix": {
      "type": "string",
      "metadata": {
        "description": "CIDR address range specifying allowable source addresses for connecting to the virtual machine SSH server"
      }
    },
    "dbConnectionStringSecretKey": {
      "type": "string",
      "defaultValue": "[concat(parameters('nodeName'), '-db-connection')]"
    },
    "additionalNodeEnvironmentVariables": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Additional environment variables to be written to canton.env and made available to the canton process"
      }
    },
    "additionalNodeEnvironmentVariablesSecretKey": {
      "type": "string",
      "defaultValue": "[concat(parameters('nodeName'), '-env')]"
    },
    "networkInterfaceName": {
      "type": "string",
      "defaultValue": "[concat(parameters('nodeName'), '-nic')]"
    },
    "publicIpAddressName": {
      "type": "string",
      "defaultValue": "[concat(parameters('nodeName'), '-public-ip')]"
    },
    "ipConfigName": {
      "type": "string",
      "defaultValue": "[concat(parameters('nodeName'), '-ip-config')]"
    },
    "publicIpAddressType": {
      "type": "string",
      "defaultValue": "Dynamic"
    },
    "virtualMachineName": {
      "type": "string",
      "defaultValue": "[parameters('nodeName')]"
    },
    "osDiskType": {
      "type": "string",
      "defaultValue": "STANDARD_LRS",
      "metadata": {
        "description": "Disk type for VM"
      }
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3"
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "canton-admin"
    },
    "adminPublicKey": {
      "type": "securestring"
    },
    "cloudInit": {
      "type": "string"
    },
    "cantonConfig": {
      "type": "string",
      "metadata": {
        "description": "Canton configuration file to start the node with"
      }
    },
    "cantonBootstrap": {
      "type": "string",
      "metadata": {
        "description": "Bootstrap script to run when canton node starts"
      }
    },
    "cantonVersion": {
      "type": "string",
      "metadata": {
        "description": "Canton release version to download and install on virtual machine"
      }
    }
  },
  "variables": {
    "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
    "vnetId": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "vaultDbConnectionStringSecretFullName": "[concat(parameters('keyVaultName'), '/', parameters('dbConnectionStringSecretKey'))]",
    "vaultAdditionalEnvSecretFullname": "[concat(parameters('keyVaultName'), '/', parameters('additionalNodeEnvironmentVariablesSecretKey'))]"
  },
  "functions": [
    {
      "namespace": "canton",
      "members": {
        "generateCloudInit": {
          "parameters": [
            {
              "name": "template",
              "type": "string"
            },
            {
              "name": "vaultName",
              "type": "string"
            },
            {
              "name": "dbSecretKey",
              "type": "string"
            },
            {
              "name": "envSecretKey",
              "type": "string"
            },
            {
              "name": "version",
              "type": "string"
            },
            {
              "name": "config",
              "type": "string"
            },
            {
              "name": "bootstrap",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[replace(replace(replace(replace(replace(replace(parameters('template'),'__VAULT__',parameters('vaultName')),'__DB_SECRET_KEY__',parameters('dbSecretKey')),'__ENV_SECRET_KEY__',parameters('envSecretKey')),'__CANTON_VERSION__',parameters('version')),'__CANTON_CONF__',base64(parameters('config'))),'__CANTON_BOOTSTRAP__',base64(parameters('bootstrap')))]"
          }
        },
        "generateDbConnectionString": {
          "parameters": [
            {
              "name": "serverName",
              "type": "string"
            },
            {
              "name": "databaseName",
              "type": "string"
            },
            {
              "name": "user",
              "type": "string"
            },
            {
              "name": "password",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[concat('jdbc:postgresql://', parameters('serverName'), '.postgres.database.azure.com:5432/', parameters('databaseName'), '?user=', parameters('user'), '@', parameters('serverName'), '&password=', parameters('password'), '&sslmode=require')]"
          }
        }
      }
    }
  ],
  "resources": [
    {
      "name": "[parameters('virtualNetworkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-11-01",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetAddressPrefix')]",
              "serviceEndpoints": [
                {
                  "service": "Microsoft.KeyVault"
                },
                { 
                  "service": "Microsoft.Sql"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiversion": "2017-12-01",
      "type": "Microsoft.DBforPostgreSQL/servers",
      "location": "[parameters('location')]",
      "name": "[parameters('dbServerName')]",
      "properties": {
        "version": "[parameters('dbPostgresVersion')]",
        "administratorLogin": "[parameters('dbUser')]",
        "administratorLoginPassword": "[parameters('dbPassword')]"
      },
      "sku": {
        "name": "[parameters('dbSkuName')]",
        "tier": "[parameters('dbSkuTier')]",
        "capacity": "[parameters('dbSkuCapacity')]",
        "size": "[parameters('dbSkuSizeMB')]",
        "family": "[parameters('dbSkuFamily')]"
      },
      "resources": [
        {
          "name": "[concat('Allow-', parameters('virtualNetworkName'))]",
          "type": "virtualNetworkRules",
          "apiVersion": "2017-12-01",
          "properties": {
            "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
            "virtualNetworkServiceEndpoint": true
          },
          "dependsOn": [
            "[concat('Microsoft.DBforPostgreSQL/servers/', parameters('dbServerName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
          ]
        },
        {
          "name": "[parameters('dbDatabaseName')]",
          "type": "databases",
          "apiVersion": "2017-12-01",
          "dependson": [
            "[parameters('dbServerName')]"
          ]
        }
      ]
    },
    {
      "condition": "[parameters('deployInfrastructure')]",
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('keyVaultName')]",
      "apiVersion": "2018-02-14",
      "location": "[parameters('location')]",
      "properties": {
        "tenantId": "[parameters('tenantId')]",
        "accessPolicies": [],
        "sku": {
          "family": "A",
          "name": "standard"
        }
      }
    },
    {
      "name": "[parameters('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-02-01",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "priority": 300,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "[parameters('sourceAddressPrefix')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('publicIpAddressName')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2019-02-01",
      "location": "[parameters('location')]",
      "properties": {
        "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
      }
    },
    {
      "name": "[parameters('networkInterfaceName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-07-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[parameters('ipConfigName')]",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgId')]"
        }
      }
    },
    {
      "name": "[parameters('virtualMachineName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-07-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]",
        "[concat('microsoft.dbforpostgresql/servers/', parameters('dbservername'))]",
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "[concat(parameters('virtualMachineName'), '-os-disk')]",
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('osDiskType')]"
            }
          },
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPublicKey')]"
                }
              ]
            }
          },
          "customData": "[base64(canton.generateCloudInit(parameters('cloudInit'), parameters('keyVaultName'), parameters('dbConnectionStringSecretKey'), parameters('additionalNodeEnvironmentVariablesSecretKey'), parameters('cantonVersion'), parameters('cantonConfig'), parameters('cantonBootstrap')))]"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[variables('vaultDbConnectionStringSecretFullName')]",
      "apiVersion": "2018-02-14",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[canton.generateDbConnectionString(parameters('dbServerName'), parameters('dbDatabaseName'), parameters('dbUser'), parameters('dbPassword'))]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[variables('vaultAdditionalEnvSecretFullname')]",
      "apiVersion": "2018-02-14",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('additionalNodeEnvironmentVariables')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "name": "[concat(parameters('keyVaultName'), '/add')]",
      "apiVersion": "2019-09-01",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
      ],
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[parameters('tenantId')]",
            "objectId": "[reference(concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName')),'2019-07-01', 'Full').identity.principalId]",
            "permissions": {
              "secrets": [
                "get"
              ]
            }
          }
        ]
      }
    }
  ]
}
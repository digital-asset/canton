// Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package com.digitalasset.canton.domain.admin.v0;

import "com/digitalasset/canton/crypto/v0/crypto.proto";
import "com/digitalasset/canton/protocol/v0/sequencing.proto";
import "com/digitalasset/canton/protocol/v0/topology.proto";


service MediatorInitializationService {

  // Initialize a Mediator service
  // If the Mediator is uninitialized it should initialize itself with the provided configuration
  // If the Mediator is already initialized then verify the request is for the domain we're running against,
  // if correct then just return the current key otherwise fail.
  rpc Initialize (InitializeMediatorRequest) returns (InitializeMediatorResponse);

}

message InitializeMediatorRequest {
  // version the domain node/manager is running (mediator needs to be compatible with this version)
  string domain_version = 1;
  // the domain identifier
  string domain_id = 2;
  // the mediator identifier
  string mediator_id = 3;
  // topology state required for startup
  com.digitalasset.canton.protocol.v0.TopologyTransactions current_identity_state = 4;
  // parameters for the domain
  com.digitalasset.canton.protocol.v0.StaticDomainParameters domain_parameters = 5;
  // how should the member connect to the domain sequencer
  com.digitalasset.canton.protocol.v0.SequencerConnection sequencer_connection = 6;
}

message InitializeMediatorResponse {
  oneof value {
    Success success = 1;
    Failure failure = 2;
  }

  message Success {
    // Current signing key
    com.digitalasset.canton.crypto.v0.SigningPublicKey mediator_key = 1;
  }

  message Failure {
    // Reason that can be logged
    string reason = 1;
  }
}
